diff -ur sum/client/main.go mirror/client/main.go
--- sum/client/main.go	2015-01-20 18:58:37.000000000 +0100
+++ mirror/client/main.go	2015-01-20 18:58:37.000000000 +0100
@@ -4,24 +4,24 @@
 	"fmt"
 	"github.com/golang/protobuf/proto"
 	"github.com/meros/go-webservice/pbws"
-	"github.com/meros/go-webservice/sum/protocol"
+	"github.com/meros/go-webservice/mirror/protocol"
 )
 
-type SumClient struct {
+type MirrorClient struct {
 }
 
-func (self *SumClient) GetResults() (proto.Message, error) {
-	return &protocol.SumResp{}, nil
+func (self *MirrorClient) GetResults() (proto.Message, error) {
+	return &protocol.MirrorResp{}, nil
 }
 
-func (self *SumClient) GetUrl() string {
-	return "http://localhost:8080/sum/ws"
+func (self *MirrorClient) GetUrl() string {
+	return "http://localhost:8080/mirror/ws"
 }
 
 func main() {
-	arguments := &protocol.SumReq{A: proto.Uint32(42), B: proto.Uint32(42)}
+	arguments := &protocol.MirrorReq{A: proto.String("Testing123")}
 
-	client := pbws.NewClient(&SumClient{})
+	client := pbws.NewClient(&MirrorClient{})
 
 	results, err := client.Call(arguments)
 
diff -ur sum/protocol/protocol.pb.go mirror/protocol/protocol.pb.go
--- sum/protocol/protocol.pb.go	2014-12-30 18:11:16.000000000 +0100
+++ mirror/protocol/protocol.pb.go	2015-01-20 18:58:37.000000000 +0100
@@ -9,8 +9,8 @@
 	protocol.proto
 
 It has these top-level messages:
-	SumReq
-	SumResp
+	MirrorReq
+	MirrorResp
 */
 package protocol
 
@@ -21,44 +21,36 @@
 var _ = proto.Marshal
 var _ = math.Inf
 
-type SumReq struct {
-	A                *uint32 `protobuf:"varint,1,req,name=a" json:"a,omitempty"`
-	B                *uint32 `protobuf:"varint,2,req,name=b" json:"b,omitempty"`
+type MirrorReq struct {
+	A                *string `protobuf:"bytes,1,req,name=a" json:"a,omitempty"`
 	XXX_unrecognized []byte  `json:"-"`
 }
 
-func (m *SumReq) Reset()         { *m = SumReq{} }
-func (m *SumReq) String() string { return proto.CompactTextString(m) }
-func (*SumReq) ProtoMessage()    {}
+func (m *MirrorReq) Reset()         { *m = MirrorReq{} }
+func (m *MirrorReq) String() string { return proto.CompactTextString(m) }
+func (*MirrorReq) ProtoMessage()    {}
 
-func (m *SumReq) GetA() uint32 {
+func (m *MirrorReq) GetA() string {
 	if m != nil && m.A != nil {
 		return *m.A
 	}
-	return 0
+	return ""
 }
 
-func (m *SumReq) GetB() uint32 {
-	if m != nil && m.B != nil {
-		return *m.B
-	}
-	return 0
-}
-
-type SumResp struct {
-	Sum              *uint32 `protobuf:"varint,1,req,name=sum" json:"sum,omitempty"`
+type MirrorResp struct {
+	A                *string `protobuf:"bytes,1,req,name=a" json:"a,omitempty"`
 	XXX_unrecognized []byte  `json:"-"`
 }
 
-func (m *SumResp) Reset()         { *m = SumResp{} }
-func (m *SumResp) String() string { return proto.CompactTextString(m) }
-func (*SumResp) ProtoMessage()    {}
-
-func (m *SumResp) GetSum() uint32 {
-	if m != nil && m.Sum != nil {
-		return *m.Sum
+func (m *MirrorResp) Reset()         { *m = MirrorResp{} }
+func (m *MirrorResp) String() string { return proto.CompactTextString(m) }
+func (*MirrorResp) ProtoMessage()    {}
+
+func (m *MirrorResp) GetA() string {
+	if m != nil && m.A != nil {
+		return *m.A
 	}
-	return 0
+	return ""
 }
 
 func init() {
diff -ur sum/protocol/protocol.proto mirror/protocol/protocol.proto
--- sum/protocol/protocol.proto	2014-12-30 18:11:16.000000000 +0100
+++ mirror/protocol/protocol.proto	2015-01-20 18:58:37.000000000 +0100
@@ -1,8 +1,7 @@
-message SumReq {
-	required uint32 a = 1;
-	required uint32 b = 2;
+message MirrorReq {
+	required string a = 1;
 }
 
-message SumResp {
-	required uint32 sum = 1;
+message MirrorResp {
+	required string a = 1;
 }
diff -ur sum/server/main.go mirror/server/main.go
--- sum/server/main.go	2015-01-20 18:58:37.000000000 +0100
+++ mirror/server/main.go	2015-01-20 18:58:37.000000000 +0100
@@ -6,25 +6,30 @@
 	"errors"
 	"fmt"
 	"github.com/golang/protobuf/proto"
+	"github.com/meros/go-webservice/mirror/protocol"
 	"github.com/meros/go-webservice/pbws"
-	"github.com/meros/go-webservice/sum/protocol"
 	"net/http"
 )
 
-type SumServer struct {
+type MirrorServer struct {
 }
 
-func (self *SumServer) GetArguments() (proto.Message, error) {
-	return &protocol.SumReq{}, nil
+func (self *MirrorServer) GetArguments() (proto.Message, error) {
+	return &protocol.MirrorReq{}, nil
 }
 
-func (self *SumServer) GetResults(arguments proto.Message) (proto.Message, error) {
-	sumReq, ok := arguments.(*protocol.SumReq)
+func (self *MirrorServer) GetResults(arguments proto.Message) (proto.Message, error) {
+	req, ok := arguments.(*protocol.MirrorReq)
 	if !ok {
 		return nil, errors.New("Wrong type of message sent to GetResults!")
 	}
 
-	results := &protocol.SumResp{Sum: proto.Uint32(sumReq.GetA() + sumReq.GetB())}
+	result := []rune(*req.A)
+	for i, j := 0, len(result)-1; i < j; i, j = i+1, j-1 {
+		result[i], result[j] = result[j], result[i]
+	}
+
+	results := &protocol.MirrorResp{A: proto.String(string(result))}
 	fmt.Println("Results: ", results)
 	return results, nil
 }
@@ -33,10 +38,10 @@
 	fmt.Println("Will start web server at 8080")
 
 	// Server the web service
-	http.Handle("/sum/ws", pbws.NewServer(&SumServer{}))
+	http.Handle("/mirror/ws", pbws.NewServer(&MirrorServer{}))
 
 	// Serve the js client
-	webclientPrefix := "/sum/client/"
+	webclientPrefix := "/mirror/client/"
 	fs := http.FileServer(http.Dir("static"))
 	http.Handle(webclientPrefix, http.StripPrefix(webclientPrefix, fs))
 
diff -ur sum/server/static/index.html mirror/server/static/index.html
--- sum/server/static/index.html	2015-01-20 18:58:37.000000000 +0100
+++ mirror/server/static/index.html	2015-01-20 18:58:37.000000000 +0100
@@ -4,14 +4,13 @@
 <head>
     <meta charset="utf-8" />    
     <script data-main="scripts/main" src="scripts/require.js"></script>
-    <title>Sum pbws client example</title>
+    <title>Mirror pbws client example</title>
 </head>
 
 <body>
-    <h1>Sum Web Service example</h1>
+    <h1>Mirror Web Service example</h1>
     <input id="valueA" typ="number"></input><br>
-    <input id="valueB" typ="number"></input><br>
-    <button id="calculateSum">Calculate Sum</button>
+    <button id="calculateMirror">Mirror String</button>
     <div id="valueResult"></div>
 </body>
 
Only in mirror/server/static/scripts/lib: mirror.pbwsclient.js
Only in sum/server/static/scripts/lib: sum.pbwsclient.js
diff -ur sum/server/static/scripts/main.js mirror/server/static/scripts/main.js
--- sum/server/static/scripts/main.js	2015-01-20 18:58:37.000000000 +0100
+++ mirror/server/static/scripts/main.js	2015-01-20 18:58:37.000000000 +0100
@@ -16,22 +16,21 @@
     }
 });
 
-requirejs(['jquery', 'sum.pbwsclient'],
+requirejs(['jquery', 'mirror.pbwsclient'],
 	  function   ($, sum) {
-              $("#calculateSum").click(function(ev) {
+              $("#calculateMirror").click(function(ev) {
 		  // Create a req message
 		  // Note: any value errors are caught here
 		  // TODO: catch any errors and do something useful
                   var sumReq = sum.createReq({
-                      "a": parseInt($("#valueA").val()),
-                      "b": parseInt($("#valueB").val())
+                      "a": $("#valueA").val(),
                   })
 
 		  // Call web service with callback function
 		  // TODO: handle errors
 		  // TODO: promises etc? Whats the new stuff in js land?
                   sum.call(sumReq, function(sumResp) {
-		      $("#valueResult").html(sumResp.sum)
+		      $("#valueResult").html(sumResp.a)
 		  });                
               });
           });
