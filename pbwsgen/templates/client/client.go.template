package {{.Name}}

import (
	"fmt"
	"github.com/golang/protobuf/proto"
	"github.com/meros/go-webservice/pbws"
	"github.com/meros/go-webservice/sum/protocol"
)

type {{.Name}}Client struct {
	url string
}

func (self *{{.Name}}Client) GetResults() (proto.Message, error) {
	return &{{.Resp}}{}, nil
}

func (self *{{.Name}}Client) GetUrl() string {
	return self.url
}


// TODO: librarify
func main() {
	arguments := &protocol.{{.Name}}Req{A: proto.Uint32(42), B: proto.Uint32(42)}

	client := pbws.NewClient(&{{.Name}}Client{url: "http://localhost:8080/ws/sum/"})

	results, err := client.Call(arguments)

	if err != nil {
		fmt.Println("Failed to call web service, err = ", err)
		return
	}

	fmt.Println("All ok! Arguments:", arguments, "results:", results)
}
