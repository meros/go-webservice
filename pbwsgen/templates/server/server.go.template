// Example webservice, using pbws

package {{.Name}}

import (
	"errors"
	"fmt"
	"github.com/golang/protobuf/proto"
	"github.com/meros/go-webservice/pbws"
	"net/http"
)

type {{.Name}}Server struct {
	handler func(*{{.Req}}) (*{{.Resp}})
}

func (self *{{.Name}}Server) GetArguments() (proto.Message, error) {
	return &{{.Req}}{}, nil
}

func (self *{{.Name}}Server) GetResults(arguments proto.Message) (proto.Message, error) {
	req, ok := arguments.(*{{.Req}})
	if !ok {
		return nil, errors.New("Wrong type of message sent to GetResults!")
	}
	fmt.Println("Req: ", req)

	resp := self.handler(req)

	fmt.Println("Response: ", resp)
	return resp, nil
}

// TODO: should return a http handler and take a function as parameter
func CreateHttpHandler(handler func(*{{.Req}}) (*{{.Resp}})) http.Handler {
	return pbws.NewServer(&{{.Name}}Server{handler: handler})
}